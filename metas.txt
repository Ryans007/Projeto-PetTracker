Tarefas a fazer:
1 - Senha com asterisco ✅
2 - Ver como salvar uma senha da forma correta ✅
3 - Inserir X2 e Y2 no território
4 - Revisar a lógica do envio da localização e do objeto localização
5 - Implementar uma logica paralela de envio de localização periódica de vários animais
6 - Ajeitar a função de show_territory
7 - Implementar o envio das localização para ser mostrada no território (possivelmente com observer)
8 - Revisar o Facade
9 - Implementar Factory ou algum padrão de criação ✅ (Builder foi implementado, no entanto da para criar mais padrões de criação)
10 - Revisar a implementação do banco de dados
11 - Adicionar a tabela de usuário ao banco de dados ✅
12 - Implementar o registro e consultas de ocorrências
13 - Implementar a remoção de animal/usuário ✅
14 - Implementar o login do usuário - Facil ✅
15 - Implementar o menu do usuário - Facil ✅
16 - Revisar o código das classes
17 - Implementar os padrões que faltam (observer, Factory, composite, proxy, singleton)
18 - Implementar (Inserir Dados do Dispositivo de Rastreamento)
19 - Adicionar lógica da criação do usuário ✅
20 - No momento da criação do usuário, exibir os territórios que ainda estão sem dono
21 - Implementar uma logica para colocar descrição no animal - Fácil 
--------------------------------------------------- Padrões Implementados------------------------------------------------------------
1 - Padrão Facade ✅
2 - Padrão Strategy ✅
  Explicação: 
    Strategy (Estratégia)
    Onde é aplicado: Nas classes UserRole, RegularUser e AdminUser.

    Objetivo: Permitir que o comportamento do sistema varie dinamicamente conforme o papel do usuário (admin ou comum).

    Funcionamento:

    A classe abstrata UserRole define o método show_menu(), que é implementado de forma diferente em RegularUser (menu limitado) e AdminUser (menu completo).

    Durante o login, o tipo de usuário determina qual estratégia (AdminUser ou RegularUser) será usada. O método show_menu() é executado polimorficamente, adaptando o menu conforme o papel.
3 - builder ✅ (Da pra implementa-lo mais vezes)
4 - proxy ✅
5 - template_method ✅
6 - singleton ✅

Tarefas feitas:
1 - Registro de Animal
2 - Acesso ao sistema
3 - Cadastro do Administrador
4 - Gerenciar Perfil do Administrador
5 - Senha com asterisco
